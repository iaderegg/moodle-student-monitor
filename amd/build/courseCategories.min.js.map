{"version":3,"sources":["../src/courseCategories.js"],"names":["define","$","ajax","templates","createTable","idNumberCourseCategory","courses","DataTable","init","document","ready","on","categoryCourseId","attr","split","courseCategoryIdNumber","promiseCreateAcademicPeriod","call","methodname","args","done","response","error","courseCategories","JSON","parse","course_categories","length","context","hasCourses","render","then","html","js","appendNodeContents","fail","ex","console","log"],"mappings":"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","sourcesContent":["/*eslint no-unused-vars: [\"error\", { \"args\": \"none\" }]*/\ndefine(['jquery',\n    'core/ajax',\n    'core/templates',\n    'report_studentmonitor/jszip',\n    'report_studentmonitor/pdfmake',\n    'report_studentmonitor/jquery.dataTables',\n    'report_studentmonitor/dataTables.bootstrap4',\n    'report_studentmonitor/autoFill.bootstrap4',\n    'report_studentmonitor/dataTables.buttons',\n    'report_studentmonitor/buttons.bootstrap4',\n    'report_studentmonitor/buttons.colVis',\n    'report_studentmonitor/buttons.html5',\n    'report_studentmonitor/buttons.print'\n    // 'report_studentmonitor/sweetalert',\n], function ($,\n    ajax,\n    templates,\n    jszip,\n    pdfmake,\n    dataTable,\n    bootstrapDataTables,\n    autoFill,\n    buttonsDatatables,\n    buttonsBootstrap,\n    buttonscolVis,\n    buttonsHtml5,\n    buttonsPrint\n    //Swal\n) {\n\n    function createTable(idNumberCourseCategory, courses) {\n\n        $('#table-courses-' + idNumberCourseCategory).DataTable({\n            \"destroy\": true,\n            \"columns\": [{\n                    \"title\": \"Nombre\"\n                },\n                {\n                    \"title\": \"Estudiantes\"\n                },\n                {\n                    \"title\": \"Ver\"\n                }\n            ],\n            \"data\": courses,\n            \"dom\": 'Bfrtip',\n            \"language\": {\n                \"url\": \"../assets/datatables/Spanish.json\",\n            },\n            \"order\": [\n\n            ],\n            \"columnDefs\": [{\n\n            }],\n            \"initComplete\": function () {\n\n            }\n        });\n    }\n\n    return {\n        init: function () {\n            $(document).ready(function () {\n\n                $('#accordion').on('click', '.category-button', function () {\n                    /* eslint no-console: [\"error\", { allow: [\"log\", \"error\"] }] */\n                    var categoryCourseId = $(this).attr('id').split('-')[1];\n                    var courseCategoryIdNumber = $(this).attr('data-target').split('-')[2];\n\n                    var promiseCreateAcademicPeriod = ajax.call([{\n                        methodname: 'report_studentmonitor_get_course_categories',\n                        args: {\n                            categoryCourseId: categoryCourseId,\n                        }\n                    }]);\n\n                    promiseCreateAcademicPeriod[0].done(function (response) {\n                        if (!response.error) {\n\n                            var courseCategories = JSON.parse(response.course_categories);\n                            var courses = JSON.parse(response.courses);\n\n                            if (courseCategories) {\n\n                                if (courses.length > 0) {\n                                    var context = {\n                                        courseCategories: courseCategories,\n                                        courseCategoryIdNumber: courseCategoryIdNumber,\n                                        hasCourses: 1\n                                    };\n                                } else {\n                                    var context = {\n                                        courseCategories: courseCategories,\n                                        courseCategoryIdNumber: courseCategoryIdNumber\n                                    };\n                                }\n\n                                templates.render('report_studentmonitor/child_categories', context)\n                                    .then(function (html, js) {\n                                        $('#card-body-' + courseCategoryIdNumber).html('');\n                                        templates.appendNodeContents('#card-body-' + courseCategoryIdNumber, html, js);\n\n                                        if (courses.length > 0) {\n                                            $('#id-'+courseCategoryIdNumber).on('click', function(){\n                                                createTable(courseCategoryIdNumber, courses);\n                                            });\n                                        }\n\n                                        if(courseCategories.length == 0){\n                                            createTable(courseCategoryIdNumber, courses);\n                                        }\n\n                                    }).fail(function (ex) {\n                                        console.log(ex);\n                                    });\n                            }\n                        }\n                    });\n\n                });\n            });\n        }\n    };\n});"],"file":"courseCategories.min.js"}