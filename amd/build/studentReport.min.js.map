{"version":3,"sources":["../src/studentReport.js"],"names":["define","$","ajax","templates","init","document","ready","on","queryString","window","location","search","urlParams","URLSearchParams","courseId","attr","split","promiseGetGradesCourse","call","methodname","args","userId","get","done","response","error","grades","JSON","parse","console","log","context","items","render","then","html","js","appendNodeContents","fail","ex"],"mappings":"AACAA,OAAM,uCAAC,CAAC,QAAD,CACC,WADD,CAEC,gBAFD,CAGC,6BAHD,CAIC,+BAJD,CAKC,yCALD,CAMC,6CAND,CAOC,2CAPD,CAQC,0CARD,CASC,0CATD,CAUC,sCAVD,CAWC,qCAXD,CAYC,qCAZD,CAaC,kCAbD,CAAD,CAcH,SACCC,CADD,CAECC,CAFD,CAGCC,CAHD,CAcO,CAEN,MAAO,CACHC,IAAI,CAAE,eAAY,CACdH,CAAC,CAACI,QAAD,CAAD,CAAYC,KAAZ,CAAkB,UAAY,CAC1BL,CAAC,CAAC,2BAAD,CAAD,CAA+BM,EAA/B,CAAkC,OAAlC,CAA2C,gBAA3C,CAA6D,UAAY,IAE/DC,CAAAA,CAAW,CAAGC,MAAM,CAACC,QAAP,CAAgBC,MAFiC,CAG/DC,CAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoBL,CAApB,CAHmD,CAIjEM,CAAQ,CAAGb,CAAC,CAAC,IAAD,CAAD,CAAQc,IAAR,CAAa,IAAb,EAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAJsD,CAMjEC,CAAsB,CAAGf,CAAI,CAACgB,IAAL,CAAU,CAAC,CACpCC,UAAU,CAAE,iDADwB,CAEpCC,IAAI,CAAE,CACFN,QAAQ,CAAEA,CADR,CAEFO,MAAM,CAAET,CAAS,CAACU,GAAV,CAAc,IAAd,CAFN,CAF8B,CAAD,CAAV,CANwC,CAcrEL,CAAsB,CAAC,CAAD,CAAtB,CAA0BM,IAA1B,CAA+B,SAAUC,CAAV,CAAoB,CAC/C,GAAI,CAACA,CAAQ,CAACC,KAAd,CAAqB,CACjB,GAAIC,CAAAA,CAAM,CAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACE,MAApB,CAAb,CACAG,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAEA,GAAIK,CAAAA,CAAO,CAAG,CACVC,KAAK,CAAEN,CAAM,CAAC,CAAD,CAAN,CAAUM,KADP,CAAd,CAIA7B,CAAS,CAAC8B,MAAV,CAAiB,6CAAjB,CAAgEF,CAAhE,EACKG,IADL,CACU,SAAUC,CAAV,CAAgBC,CAAhB,CAAoB,CACtBnC,CAAC,CAAC,cAAgBa,CAAjB,CAAD,CAA4BqB,IAA5B,CAAiC,EAAjC,EACAhC,CAAS,CAACkC,kBAAV,CAA6B,cAAgBvB,CAA7C,CAAuDqB,CAAvD,CAA6DC,CAA7D,CACH,CAJL,EAIOE,IAJP,CAIY,SAAUC,CAAV,CAAc,CAClBV,OAAO,CAACC,GAAR,CAAYS,CAAZ,CACH,CANL,CAOH,CACJ,CAjBD,CAkBH,CAhCD,CAiCH,CAlCD,CAmCH,CArCE,CAuCV,CArEK,CAAN","sourcesContent":["/*eslint no-unused-vars: [\"error\", { \"args\": \"none\" }]*/\ndefine(['jquery',\n        'core/ajax',\n        'core/templates',\n        'report_studentmonitor/jszip',\n        'report_studentmonitor/pdfmake',\n        'report_studentmonitor/jquery.dataTables',\n        'report_studentmonitor/dataTables.bootstrap4',\n        'report_studentmonitor/autoFill.bootstrap4',\n        'report_studentmonitor/dataTables.buttons',\n        'report_studentmonitor/buttons.bootstrap4',\n        'report_studentmonitor/buttons.colVis',\n        'report_studentmonitor/buttons.html5',\n        'report_studentmonitor/buttons.print',\n        'report_studentmonitor/sweetalert',\n], function (\n    $,\n    ajax,\n    templates,\n    jszip,\n    pdfmake,\n    dataTable,\n    bootstrapDataTables,\n    autoFill,\n    buttonsDatatables,\n    buttonsBootstrap,\n    buttonscolVis,\n    buttonsHtml5,\n    buttonsPrint,\n    Swal) {\n\n    return {\n        init: function () {\n            $(document).ready(function () {\n                $('#accordion-student-report').on('click', '.course-button', function () {\n                    /* eslint no-console: [\"error\", { allow: [\"log\", \"error\"] }] */\n                    const queryString = window.location.search;\n                    const urlParams = new URLSearchParams(queryString);\n                    var courseId = $(this).attr('id').split('-')[1];\n\n                    var promiseGetGradesCourse = ajax.call([{\n                        methodname: 'report_studentmonitor_get_student_course_grades',\n                        args: {\n                            courseId: courseId,\n                            userId: urlParams.get('id')\n                        }\n                    }]);\n\n                    promiseGetGradesCourse[0].done(function (response) {\n                        if (!response.error) {\n                            var grades = JSON.parse(response.grades);\n                            console.log(grades);\n\n                            var context = {\n                                items: grades[0].items,\n                            };\n\n                            templates.render('report_studentmonitor/student_course_grades', context)\n                                .then(function (html, js) {\n                                    $('#card-body-' + courseId).html('');\n                                    templates.appendNodeContents('#card-body-' + courseId, html, js);\n                                }).fail(function (ex) {\n                                    console.log(ex);\n                                });\n                        }\n                    });\n                });\n            });\n        }\n    };\n});"],"file":"studentReport.min.js"}